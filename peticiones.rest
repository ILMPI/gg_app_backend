@PORT = 3000
@HOST = http://localhost:{{PORT}}

@TOKEN = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NywiaWF0IjoxNzE4OTcyNDEzLCJleHAiOjE3MTkwNTg4MTN9.cs0X1J4gsTGG1A92q13-6AmxGo5DVqVFSxi6PAmdaaE

###AUTH

### Register User
POST {{HOST}}/api/auth/register
Content-Type: application/json

{
    "password": "password",
    "name": "Vanessa May",
    "email": "vanessaM@gmail.com"
}

### Login User
POST {{HOST}}/api/auth/login
Content-Type: application/json

{
    "email": "admin@gmail.com",
    "password": "password"
}


### USERS

### Get Users
GET {{HOST}}/api/users
x-access-token: {{TOKEN}}

### Get User by Id
GET {{HOST}}/api/users/14
x-access-token: {{TOKEN}}


### Update User Profile
PUT {{HOST}}/api/users/7
Content-Type: application/json
x-access-token: {{TOKEN}}

{
    "name": "Admin"
}

### Search User by Email
GET {{HOST}}/api/users/email/admin@gmail.com
x-access-token: {{TOKEN}}

### Search for Users with Common Groups
GET {{HOST}}/api/users/7/common-groups
x-access-token: {{TOKEN}}


### Delete User Profile (if no active connections)
DELETE {{HOST}}/api/users/14
x-access-token: {{TOKEN}}

###GROUPS

### Get Groups
GET {{HOST}}/api/groups
x-access-token: {{TOKEN}}

### Get Group by Id
GET {{HOST}}/api/groups/4
x-access-token: {{TOKEN}}

### Get Groups by Creator Id
GET {{HOST}}/api/groups/creator/7
x-access-token: {{TOKEN}}

### Get All Groups by User Id
GET {{HOST}}/api/groups/user/1
x-access-token: {{TOKEN}}

### Get ALL Groups by User Id (User not found)
GET {{HOST}}/api/groups/user/999
x-access-token: {{TOKEN}}

### Create Group
POST {{HOST}}/api/groups
Content-Type: application/json
x-access-token: {{TOKEN}}

{
  "name": "Group de Vanessa M",
  "description": "Description",
  "image": "https://picsum.photos/id/26/200/200"
}

### Update Group
PUT {{HOST}}/api/groups/21
Content-Type: application/json
x-access-token: {{TOKEN}}

{
  "name": "New Group Name",
  "image": "https://picsum.photos/id/26/200/200",
  "title":"Lalaland"
}

### Delete Group
DELETE {{HOST}}/api/groups/20
x-access-token: {{TOKEN}}

### Get Group State by Group ID
GET {{HOST}}/api/groups/20/state
x-access-token: {{TOKEN}}

### Activate Group
POST {{HOST}}/api/groups/20/activate
x-access-token: {{TOKEN}}

### Invite User to Group
POST {{HOST}}/api/groups/23/invite
Content-Type: application/json
x-access-token: {{TOKEN}}

{
    "participants": [
        {
            "email": "admin@gmail.com"
        }
    ]

}


### Invite Users to Group
POST {{HOST}}/api/groups/4/invite
Content-Type: application/json
x-access-token: {{TOKEN}}

{
    "users": [
        {
            "email": "user1@example.com"
        },
        {
            "email": "user2@example.com",
            "name": "User Two"
        },
        {
            "email": "user3@example.com"
        },
        {
            "email": "user4@example.com",
            "name": "User Four"
        },
        {
            "email": "user5@example.com"
        },
        {
            "email": "user6@example.com",
            "name": "User Six"
        },
        {
            "email": "user7@example.com"
        },
        {
            "email": "user8@example.com",
            "name": "User Eight"
        },
        {
            "email": "user9@example.com"
        },
        {
            "email": "user10@example.com",
            "name": "User Ten"
        },
        {
            "email": "user11@example.com"
        }
    ]
}



### MEMEMBERSHIP

### Get All Membership GET {{HOST}}/api/membership
GET {{HOST}}/api/membership
x-access-token: {{TOKEN}}

### Get All Membership of a group GET {{HOST}}/api/membership/group/1
GET {{HOST}}/api/membership/group/4
x-access-token: {{TOKEN}}

# this method is commented now --> look for method Invite to the Group
# ### Add Member To Group POST {{HOST}}/api/membership Content-Type: application/json
# POST {{HOST}}/api/membership
# Content-Type: application/json
# x-access-token: {{TOKEN}}

# {
#     "users_id": "7",
#     "groups_id": "4",
#     "status": "Invited",
#     "balance": "0"
# }

### Update membership status, only put Joined status PUT {{HOST}}/api/membership/userid/groupid
PUT {{HOST}}/api/membership/7/23
Content-Type: application/json
x-access-token: {{TOKEN}}


### Delete membership DELETE {{HOST}}/api/membership/users_id/groups_id
DELETE {{HOST}}/api/membership/10/4
x-access-token: {{TOKEN}}


### EXPENSE

### Create Expense 
### 'YYYY-MM-DD HH:MM'
POST {{HOST}}/api/expenses
Content-Type: application/json
x-access-token: {{TOKEN}}

{
    "groups_id": "4",
    "concept": "Taller de Excel",
    "amount": "70",
    "date": "2024-06-01 19:30:00",
    "max_date": "2024-07-01 14:00:00",
    "image_url": null,
    "payer_user_id": "7"
}

### Get All Expenses by groups_id GET {{HOST}}/api/expenses/group/1
GET {{HOST}}/api/expenses/group/4
x-access-token: {{TOKEN}}


### Get All Expenses by users_id GET {{HOST}}/api/expenses/users/2
GET {{HOST}}/api/expenses/users/7
x-access-token: {{TOKEN}}


### Update Expense PUT {{HOST}}/api/expenses/47 Content-Type: application/json
PUT {{HOST}}/api/expenses/1
Content-Type: application/json
x-access-token: {{TOKEN}}

{
    "groups_id": "4",
    "concept": "Camnbio comida 2 por otro concepto",
    "amount": "120",
    "date": "2024-06-25 19:00",
    "max_date": "2024-06-30 19:00",
    "image_url": "/tickets/051.jpg",
    "payer_user_id": "2"
}

### Delete Expense by expense_id DELETE {{HOST}}/api/expenses/39
DELETE {{HOST}}/api/expenses/10
x-access-token: {{TOKEN}}

### Pay expense_assingment
POST {{HOST}}/api/expenses/payment
Content-Type: application/json
x-access-token: {{TOKEN}}

{
   "users_id" : "10",
   "expenses_id" : "33",
   "groups_id" : "38",
   "cost" : "50",
   "status": "Reported"
}


### NOTIFICATIONS

### Get All Notifications
GET {{HOST}}/api/notifications
x-access-token: {{TOKEN}}

### Get Notifications by Users_id
GET {{HOST}}/api/notifications/6
x-access-token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OSwiaWF0IjoxNzE4NDMxNDU5LCJleHAiOjE3MTg1MTc4NTl9.EIlHUrsoOfClCyjgmlTgtnRkQm0d34wcZrNJldKUDGg


### Create a Notification
POST {{HOST}}/api/notifications
Content-Type: application/json
x-access-token: {{TOKEN}}

{
    "users_id": "6",
    "status": "Unread",
    "date": "2024-06-25 19:00",
    "title": "Notificacion prueba",
    "description": "Desde peticiones.rest, no generada automaticamente"
}

### Update a Notification 
PUT {{HOST}}/api/notifications/1
Content-Type: application/json
x-access-token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OSwiaWF0IjoxNzE4NDMxNDU5LCJleHAiOjE3MTg1MTc4NTl9.EIlHUrsoOfClCyjgmlTgtnRkQm0d34wcZrNJldKUDGg

{
    "users_id": "6",
    "status": "Read",
    "date": "2024-06-25 19:00",
    "title": "Notificacion prueba",
    "description": "Desde peticiones.rest, no generada automaticamente"
}

### Delete Notification
DELETE {{HOST}}/api/notifications/1
x-access-token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OSwiaWF0IjoxNzE4NDMxNDU5LCJleHAiOjE3MTg1MTc4NTl9.EIlHUrsoOfClCyjgmlTgtnRkQm0d34wcZrNJldKUDGg

### Delete Notifications by group and users_id
// a√±adir a tabla notifications groups_id, este metodo es para borrar las notificaciones
// a un usuario referidas a un grupo, para cuando se borre el grupo (se haya acabado su finalidad)
// y ya no aparezcan en su vista de notificaciones 


### INVITATIONS

### Get Invitation by email
GET {{HOST}}/api/invitations/email/ellaria2@hotmail.com

### Create Invitation
POST {{HOST}}/api/invitations
Content-Type: application/json
x-access-token: {{TOKEN}}

{
    "users_id": "10", 
    "groups_id": "38",
     "sent_on": "2024-06-01 00:00",
     "responded_on": "2024-06-02 00:00",
     "email": "eduardo.llaria@bi-bat.com"
}